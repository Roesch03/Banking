name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    runs-on: ubuntu-latest


    steps:
    - uses: actions/checkout@v4
     # Log in to the GitHub Container Registry
    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build the Docker image
      run: docker compose build

    - name: Push Docker image to GitHub Container Registry
      run: |
        docker push ghcr.io/roesch03/banking/wds
        docker push ghcr.io/roesch03/banking/api_server

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
  
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 162.55.191.34 >> ~/.ssh/known_hosts
      - name: push compose
        run: |
          scp -i ~/.ssh/id_rsa ./docker-compose.yml root@162.55.191.34:/app/docker-compose.yml
      - name: start compose
        run: |
          ssh root@162.55.191.34 'echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin; docker pull ghcr.io/roesch03/banking/wds; docker pull ghcr.io/roesch03/banking/api_server; cd /app; if [[ $(docker compose ps | wc -l) -gt 1 ]]; then docker compose down; fi; docker compose up -d; docker compose ps; docker compose logs'
 
